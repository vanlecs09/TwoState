//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public RectPositionListenerComponent rectPositionListener { get { return (RectPositionListenerComponent)GetComponent(GameComponentsLookup.RectPositionListener); } }
    public bool hasRectPositionListener { get { return HasComponent(GameComponentsLookup.RectPositionListener); } }

    public void AddRectPositionListener(System.Collections.Generic.List<IRectPositionListener> newValue) {
        var index = GameComponentsLookup.RectPositionListener;
        var component = (RectPositionListenerComponent)CreateComponent(index, typeof(RectPositionListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceRectPositionListener(System.Collections.Generic.List<IRectPositionListener> newValue) {
        var index = GameComponentsLookup.RectPositionListener;
        var component = (RectPositionListenerComponent)CreateComponent(index, typeof(RectPositionListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveRectPositionListener() {
        RemoveComponent(GameComponentsLookup.RectPositionListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRectPositionListener;

    public static Entitas.IMatcher<GameEntity> RectPositionListener {
        get {
            if (_matcherRectPositionListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RectPositionListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRectPositionListener = matcher;
            }

            return _matcherRectPositionListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddRectPositionListener(IRectPositionListener value) {
        var listeners = hasRectPositionListener
            ? rectPositionListener.value
            : new System.Collections.Generic.List<IRectPositionListener>();
        listeners.Add(value);
        ReplaceRectPositionListener(listeners);
    }

    public void RemoveRectPositionListener(IRectPositionListener value, bool removeComponentWhenEmpty = true) {
        var listeners = rectPositionListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveRectPositionListener();
        } else {
            ReplaceRectPositionListener(listeners);
        }
    }
}
