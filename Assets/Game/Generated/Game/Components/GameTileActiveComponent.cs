//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TileActiveComponent tileActive { get { return (TileActiveComponent)GetComponent(GameComponentsLookup.TileActive); } }
    public bool hasTileActive { get { return HasComponent(GameComponentsLookup.TileActive); } }

    public void AddTileActive(bool newValue) {
        var index = GameComponentsLookup.TileActive;
        var component = (TileActiveComponent)CreateComponent(index, typeof(TileActiveComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTileActive(bool newValue) {
        var index = GameComponentsLookup.TileActive;
        var component = (TileActiveComponent)CreateComponent(index, typeof(TileActiveComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTileActive() {
        RemoveComponent(GameComponentsLookup.TileActive);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTileActive;

    public static Entitas.IMatcher<GameEntity> TileActive {
        get {
            if (_matcherTileActive == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TileActive);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTileActive = matcher;
            }

            return _matcherTileActive;
        }
    }
}
