//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity blockSceneRayCastEntity { get { return GetGroup(InputMatcher.BlockSceneRayCast).GetSingleEntity(); } }
    public BlockSceneRayCastComponent blockSceneRayCast { get { return blockSceneRayCastEntity.blockSceneRayCast; } }
    public bool hasBlockSceneRayCast { get { return blockSceneRayCastEntity != null; } }

    public InputEntity SetBlockSceneRayCast(bool newIsPermanent, bool newIsInThisFrame) {
        if (hasBlockSceneRayCast) {
            throw new Entitas.EntitasException("Could not set BlockSceneRayCast!\n" + this + " already has an entity with BlockSceneRayCastComponent!",
                "You should check if the context already has a blockSceneRayCastEntity before setting it or use context.ReplaceBlockSceneRayCast().");
        }
        var entity = CreateEntity();
        entity.AddBlockSceneRayCast(newIsPermanent, newIsInThisFrame);
        return entity;
    }

    public void ReplaceBlockSceneRayCast(bool newIsPermanent, bool newIsInThisFrame) {
        var entity = blockSceneRayCastEntity;
        if (entity == null) {
            entity = SetBlockSceneRayCast(newIsPermanent, newIsInThisFrame);
        } else {
            entity.ReplaceBlockSceneRayCast(newIsPermanent, newIsInThisFrame);
        }
    }

    public void RemoveBlockSceneRayCast() {
        blockSceneRayCastEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public BlockSceneRayCastComponent blockSceneRayCast { get { return (BlockSceneRayCastComponent)GetComponent(InputComponentsLookup.BlockSceneRayCast); } }
    public bool hasBlockSceneRayCast { get { return HasComponent(InputComponentsLookup.BlockSceneRayCast); } }

    public void AddBlockSceneRayCast(bool newIsPermanent, bool newIsInThisFrame) {
        var index = InputComponentsLookup.BlockSceneRayCast;
        var component = (BlockSceneRayCastComponent)CreateComponent(index, typeof(BlockSceneRayCastComponent));
        component.isPermanent = newIsPermanent;
        component.isInThisFrame = newIsInThisFrame;
        AddComponent(index, component);
    }

    public void ReplaceBlockSceneRayCast(bool newIsPermanent, bool newIsInThisFrame) {
        var index = InputComponentsLookup.BlockSceneRayCast;
        var component = (BlockSceneRayCastComponent)CreateComponent(index, typeof(BlockSceneRayCastComponent));
        component.isPermanent = newIsPermanent;
        component.isInThisFrame = newIsInThisFrame;
        ReplaceComponent(index, component);
    }

    public void RemoveBlockSceneRayCast() {
        RemoveComponent(InputComponentsLookup.BlockSceneRayCast);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherBlockSceneRayCast;

    public static Entitas.IMatcher<InputEntity> BlockSceneRayCast {
        get {
            if (_matcherBlockSceneRayCast == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.BlockSceneRayCast);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherBlockSceneRayCast = matcher;
            }

            return _matcherBlockSceneRayCast;
        }
    }
}
