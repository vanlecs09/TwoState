//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity objectPoolEntity { get { return GetGroup(MetaMatcher.ObjectPool).GetSingleEntity(); } }
    public ObjectPoolComponent objectPool { get { return objectPoolEntity.objectPool; } }
    public bool hasObjectPool { get { return objectPoolEntity != null; } }

    public MetaEntity SetObjectPool(IObjectPoolService newInstance) {
        if (hasObjectPool) {
            throw new Entitas.EntitasException("Could not set ObjectPool!\n" + this + " already has an entity with ObjectPoolComponent!",
                "You should check if the context already has a objectPoolEntity before setting it or use context.ReplaceObjectPool().");
        }
        var entity = CreateEntity();
        entity.AddObjectPool(newInstance);
        return entity;
    }

    public void ReplaceObjectPool(IObjectPoolService newInstance) {
        var entity = objectPoolEntity;
        if (entity == null) {
            entity = SetObjectPool(newInstance);
        } else {
            entity.ReplaceObjectPool(newInstance);
        }
    }

    public void RemoveObjectPool() {
        objectPoolEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public ObjectPoolComponent objectPool { get { return (ObjectPoolComponent)GetComponent(MetaComponentsLookup.ObjectPool); } }
    public bool hasObjectPool { get { return HasComponent(MetaComponentsLookup.ObjectPool); } }

    public void AddObjectPool(IObjectPoolService newInstance) {
        var index = MetaComponentsLookup.ObjectPool;
        var component = (ObjectPoolComponent)CreateComponent(index, typeof(ObjectPoolComponent));
        component.instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceObjectPool(IObjectPoolService newInstance) {
        var index = MetaComponentsLookup.ObjectPool;
        var component = (ObjectPoolComponent)CreateComponent(index, typeof(ObjectPoolComponent));
        component.instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveObjectPool() {
        RemoveComponent(MetaComponentsLookup.ObjectPool);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherObjectPool;

    public static Entitas.IMatcher<MetaEntity> ObjectPool {
        get {
            if (_matcherObjectPool == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.ObjectPool);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherObjectPool = matcher;
            }

            return _matcherObjectPool;
        }
    }
}
